seed_everything: 42

# ---------------------------- TRAINER -------------------------------------------
trainer:
  default_root_dir: ${oc.env:AMLT_OUTPUT_DIR,/mnt/climate_pretraining/outputs/vit}

  precision: 16

  gpus: null
  num_nodes: 1
  accelerator: gpu
  strategy: ddp_find_unused_parameters_false

  min_epochs: 1
  max_epochs: 20
  enable_progress_bar: true

  sync_batchnorm: True
  enable_checkpointing: True
  resume_from_checkpoint: null

  # debugging
  fast_dev_run: false

  logger:
    class_path: pytorch_lightning.loggers.tensorboard.TensorBoardLogger
    init_args:
      save_dir: ${trainer.default_root_dir}/logs
      name: test
      version: null
      log_graph: False
      default_hp_metric: True
      prefix: ""

  callbacks:
    - class_path: pytorch_lightning.callbacks.LearningRateMonitor
      init_args:
        logging_interval: "step"

    - class_path: pytorch_lightning.callbacks.ModelCheckpoint
      init_args:
        dirpath: "${trainer.default_root_dir}/checkpoints/test"
        monitor: "val/w_rmse" # name of the logged metric which determines when model is improving
        mode: "min" # "max" means higher metric value is better, can be also "min"
        save_top_k: 1 # save k best models (determined by above metric)
        save_last: True # additionaly always save model from last epoch
        verbose: False
        filename: "epoch_{epoch:03d}"
        auto_insert_metric_name: False

    - class_path: pytorch_lightning.callbacks.EarlyStopping
      init_args:
        monitor: "train/loss" # name of the logged metric which determines when model is improving
        mode: "min" # "max" means higher metric value is better, can be also "min"
        patience: 100 # how many validation epochs of not improving until training stops
        min_delta: 0 # minimum change in the monitored metric needed to qualify as an improvement

    - class_path: pytorch_lightning.callbacks.RichModelSummary
      init_args:
        max_depth: -1

    - class_path: pytorch_lightning.callbacks.RichProgressBar

# ---------------------------- MODEL -------------------------------------------
model:
  lr: 0.0005
  weight_decay: 0.05
  warmup_epochs: 5
  max_epochs: 30
  warmup_start_lr: 1e-8
  eta_min: 1e-8

  net:
    class_path: src.models.components.vit.VisionTransformer
    init_args:
      img_size: [128, 256]
      patch_size: 16
      drop_path: 0.0
      learn_pos_emb: False
      in_vars: [
          "land_sea_mask",
          "orography",
          "lattitude",
          "2m_temperature",
          "10m_u_component_of_wind",
          "10m_v_component_of_wind",
          "toa_incident_solar_radiation",
          # 'total_precipitation',
          "geopotential_50",
          "geopotential_250",
          "geopotential_500",
          "geopotential_600",
          "geopotential_700",
          "geopotential_850",
          "geopotential_925",
          "u_component_of_wind_50",
          "u_component_of_wind_250",
          "u_component_of_wind_500",
          "u_component_of_wind_600",
          "u_component_of_wind_700",
          "u_component_of_wind_850",
          "u_component_of_wind_925",
          "v_component_of_wind_50",
          "v_component_of_wind_250",
          "v_component_of_wind_500",
          "v_component_of_wind_600",
          "v_component_of_wind_700",
          "v_component_of_wind_850",
          "v_component_of_wind_925",
          "temperature_50",
          "temperature_250",
          "temperature_500",
          "temperature_600",
          "temperature_700",
          "temperature_850",
          "temperature_925",
          "relative_humidity_50",
          "relative_humidity_250",
          "relative_humidity_500",
          "relative_humidity_600",
          "relative_humidity_700",
          "relative_humidity_850",
          "relative_humidity_925",
          "specific_humidity_50",
          "specific_humidity_250",
          "specific_humidity_500",
          "specific_humidity_600",
          "specific_humidity_700",
          "specific_humidity_850",
          "specific_humidity_925",
        ]
      embed_dim: 1024
      depth: 8
      decoder_depth: 0 # linear layer, if > 0 use transformer blocks
      num_heads: 16
      mlp_ratio: 4
      out_vars: null
  pretrained_path: ""

# ---------------------------- DATA -------------------------------------------
data:
  root_dir: /datadrive/1.40625deg_equally_np
  reader: npy # npy or zarr
  dataset_type: forecast # pretrain or forecast (finetune)
  variables: [
      "lsm",
      "orography",
      "lat2d",
      "t2m",
      "u10",
      "v10",
      "tisr",
      # 'tp',
      "z_50",
      "z_250",
      "z_500",
      "z_600",
      "z_700",
      "z_850",
      "z_925",
      "u_50",
      "u_250",
      "u_500",
      "u_600",
      "u_700",
      "u_850",
      "u_925",
      "v_50",
      "v_250",
      "v_500",
      "v_600",
      "v_700",
      "v_850",
      "v_925",
      "t_50",
      "t_250",
      "t_500",
      "t_600",
      "t_700",
      "t_850",
      "t_925",
      "r_50",
      "r_250",
      "r_500",
      "r_600",
      "r_700",
      "r_850",
      "r_925",
      "q_50",
      "q_250",
      "q_500",
      "q_600",
      "q_700",
      "q_850",
      "q_925",
    ]
  predict_range: 6
  predict_steps: 4
  pct_train: 1.0
  buffer_size: 20000
  batch_size: 128
  num_workers: 2
  pin_memory: False
